server:
  port: 8081

logging:
  level:
    root: info
    org:
      hibernate:
        SQL: debug
        type: debug
  file:
    name: logs/admin.log
  logback:
    rollingpolicy:
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}-%i.log
      max-file-size: 1GB

spring:
  # H2
  h2:
    console:
      enabled: true
      path: /h2-console
  # DATASOURCE
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:~/test;AUTO_SERVER=TRUE
    username: sa
    password:
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      auto-commit: false
      data-source-properties:
        rewriteBatchedStatements: true
  sql:
    init:
      mode: ALWAYS
      data-locations: classpath:sql/init.sql

  # JPA
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create
    show-sql: true
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true

mybatis:
  mapper-locations: mapper/**/*.xml
  type-aliases-package: com.anything.mybatis.**

---

app:
  apicall:
    login:
      url: http://localhost:9090
      user-save: ${app.apicall.login.url}/api/user/save
      login: ${app.apicall.login.url}/api/login
      token-refresh: ${app.apicall.login.url}/api/login/refresh
      token-check: ${app.apicall.login.url}/api/login/token
  async:
    core-pool-size: 3
    max-pool-size: 30
    queue-capacity: 100
